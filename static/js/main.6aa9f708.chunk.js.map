{"version":3,"sources":["useInputLogic.js","KeypadButton.jsx","Keypad.jsx","Display.jsx","CalculationHistory.jsx","App.jsx","index.js"],"names":["useInputLogic","setInputChar","math","create","all","epsilon","matrix","number","precision","predictable","randomSeed","useState","inputState","setInputState","bracketsL","setBracketsL","bracketsR","setBracketsR","history","setHistory","numbers","operations","dots","brackets","autochange","numbersAndBrackets","operationsAndDots","operationsAndBrackets","lastChar","length","beforeLastChar","handleInput","key","includes","prev","slice","every","op","lastIndexOf","L","R","item","result","evaluate","toString","keyForLogic","value","useStyles","makeStyles","keypadButton","backgroundColor","props","inputChar","color","cursor","flexGrow","outline","width","display","justifyContent","alignItems","transition","fontSize","KeypadButton","name","handlePress","isMobile","classes","Button","className","onTouchStart","onTouchEnd","onTouchCancel","onMouseDown","onMouseUp","onMouseLeave","keypad","flexDirection","height","row","Keypad","onKeyDown","onKeyUp","createRowOfKeypadButtons","keysAndNamesArray","map","index","Array","isArray","row1","row2","row3","row4","row5","row6","textFieldInputPropsStyle","textAlign","caretColor","Display","input","TextField","readOnly","variant","fullWidth","inputProps","main","drawer","padding","minHeight","maxHeight","alignSelf","historyItem","marginBottom","openHistoryButton","lineHeight","closeHistoryButton","CalculationHistory","handlePasteFromHistory","open","setOpen","mappedHistory","isPasteAllowed","Number","isFinite","isNaN","ListItem","component","Paper","elevation","List","onClick","openHistoryButtonRef","useRef","Drawer","onClose","anchor","Typography","ref","onFocus","current","blur","container","margin","minWidth","maxWidth","App","setIsMobile","theme","useTheme","mathches","useMediaQuery","breakpoints","down","useEffect","handleKeyDown","e","handleKeyUp","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6aa9f708.chunk.js","sourcesContent":["import { create, all } from 'mathjs'\r\nimport { useState } from 'react';\r\n\r\nconst useInputLogic = (setInputChar) => {\r\n\r\n    const config = {\r\n        epsilon: 1e-12,\r\n        matrix: 'Matrix',\r\n        number: 'number',\r\n        precision: 100,\r\n        predictable: false,\r\n        randomSeed: null\r\n    };\r\n\r\n    const math = create(all, config)\r\n\r\n    const [inputState, setInputState] = useState('')\r\n\r\n    const [bracketsL, setBracketsL] = useState(0)\r\n    const [bracketsR, setBracketsR] = useState(0)\r\n\r\n    const [history, setHistory] = useState([])\r\n\r\n    const handlePress = (keyForLogic) => {\r\n        handleInput(keyForLogic)\r\n    }\r\n\r\n    const numbers = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\r\n    const operations = ['+', '-', '*', '/'];\r\n    const dots = ['.', ',']\r\n    const brackets = ['(', ')']\r\n    const autochange = [...operations, ...dots]\r\n    const numbersAndBrackets = [...numbers, ...brackets]\r\n    const operationsAndDots = [...operations, ...dots]\r\n    const operationsAndBrackets = [...operations, ...brackets]\r\n\r\n    const lastChar = inputState[inputState.length - 1]\r\n    const beforeLastChar = inputState[inputState.length - 2]\r\n\r\n    const isDotAllowed = () => {\r\n        if (operations.every((op) => inputState.lastIndexOf('.') > inputState.lastIndexOf(op)) || !numbers.includes(lastChar)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const handlePasteFromHistory = (value) => {\r\n        if (inputState.length === 0 || operations.includes(lastChar) || lastChar === '(') {\r\n            setInputState((prev) => `${prev}${value}`)\r\n\r\n        } else if (value === '0' || value === 'Infinity' || value === 'NaN') {\r\n            return\r\n\r\n        } else if (inputState === '0' || inputState === 'Infinity' || inputState === 'NaN') {\r\n            setInputState(value)\r\n\r\n        } else {\r\n            setInputState((prev) => `${prev}*${value}`)\r\n            setBracketsL(0)\r\n            setBracketsR(0)\r\n        }\r\n    }\r\n\r\n    const handleInput = (key) => {\r\n        if (key === 'Enter') key = '='\r\n        if (key === ',' ) key = '.'\r\n        \r\n        setInputChar(key)\r\n\r\n        if (numbers.includes(key)) {\r\n\r\n            if (inputState === '0' || inputState === 'Infinity' || inputState === 'NaN') {\r\n                setInputState(key)\r\n\r\n            } else if (lastChar === '0' && operationsAndBrackets.includes(beforeLastChar)) {\r\n                setInputState((prev) => prev.slice(0, prev.length - 1) + key)\r\n\r\n            } else {\r\n                setInputState((prev) => prev + key)\r\n            }\r\n\r\n        } else if (operations.includes(key)) {\r\n\r\n            if (inputState.length === 0 || inputState === 'Infinity' || inputState === 'NaN') {\r\n                setInputState('')\r\n\r\n            } else if (key === '-' && lastChar === '(') {\r\n                setInputState((prev) => prev + key)\r\n\r\n            } else if (lastChar === '(') {\r\n                setInputState((prev) => prev)\r\n\r\n            } else if (autochange.includes((lastChar))) {\r\n                setInputState((prev) => prev.slice(0, prev.length - 1) + key)\r\n\r\n            } else {\r\n                setInputState((prev) => prev + key)\r\n            }\r\n\r\n        } else if (dots.includes(key)) {\r\n            if (autochange.includes(lastChar)) {\r\n                setInputState((prev) => prev.slice(0, prev.length - 1) + '.')\r\n\r\n            }\r\n\r\n            if (isDotAllowed()) {\r\n                setInputState((prev) => prev + '.')\r\n            }\r\n\r\n        } else if (brackets.includes(key)) {\r\n\r\n            if (key === '(') {\r\n\r\n                if (brackets.includes(lastChar) || inputState.length === 0) {\r\n                    setBracketsL((L) => L + 1)\r\n                    setInputState((prev) => prev + key)\r\n\r\n                } else if (!operationsAndDots.includes(lastChar)) {\r\n                    setBracketsL((L) => L + 1)\r\n                    setInputState((prev) => prev + '*' + key)\r\n\r\n                } else if (operations.includes(lastChar) || inputState.length === 0) {\r\n                    setBracketsL((L) => L + 1)\r\n                    setInputState((prev) => prev + key)\r\n\r\n                }\r\n            } else if (key === ')') {\r\n\r\n                if (bracketsL > bracketsR && lastChar === ')') {\r\n                    setBracketsR((R) => R + 1)\r\n                    setInputState((prev) => prev + key)\r\n\r\n                } else if (bracketsL > bracketsR && numbers.includes(lastChar)) {\r\n                    setBracketsR((R) => R + 1)\r\n                    setInputState((prev) => prev + key)\r\n                }\r\n\r\n            }\r\n\r\n        } else if (key === '+/-') {\r\n            if (operationsAndBrackets.every((item) => !inputState.includes(item))) {\r\n\r\n                if (inputState[0] !== '-') {\r\n                    setInputState((prev) => '-' + prev)\r\n\r\n                }\r\n\r\n            } else if (inputState[0] === '-') {\r\n                setInputState((prev) => prev.slice(1))\r\n\r\n            }\r\n\r\n        } else if (key === 'Backspace') {\r\n            if (inputState.slice) {\r\n                if (brackets.includes(lastChar)) {\r\n\r\n                    if (lastChar === '(') setBracketsL((L) => L - 1)\r\n\r\n                    else if (lastChar === ')') setBracketsR((R) => R - 1)\r\n\r\n                }\r\n                setInputState((prev) => prev.slice(0, prev.length - 1))\r\n            }\r\n\r\n        } else if (key === 'Delete') {\r\n            setInputState('')\r\n            setBracketsL(0)\r\n            setBracketsR(0)\r\n\r\n        } else if (key === '=' || key === 'Enter') {\r\n\r\n            if (bracketsL === bracketsR && inputState && numbersAndBrackets.includes(lastChar)) {\r\n                const result = (math.evaluate(inputState)).toString();\r\n\r\n                setHistory((prev) => [...prev, [inputState, result]]) //[[state: res] [state:res]]\r\n\r\n                setInputState(result)\r\n\r\n            } \r\n        }\r\n    }\r\n\r\n    return [inputState, handlePress, history, handlePasteFromHistory]\r\n}\r\n\r\nexport default useInputLogic","import React, { Fragment } from 'react'\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button'\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\n\r\nconst useStyles = makeStyles({\r\n    keypadButton: {\r\n        backgroundColor: (props) => props.inputChar === props.keyForLogic ? 'darkblue' : 'blue',\r\n        color: 'white',\r\n        cursor: 'default',\r\n        flexGrow: 1,\r\n        outline: '1px solid white',\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        transition: 'none',\r\n        fontSize: '25px',\r\n        '&:hover': {\r\n            backgroundColor: (props) => props.inputChar === props.keyForLogic ? 'darkblue' : 'blue',\r\n        }\r\n    }\r\n})\r\n\r\nconst KeypadButton = ({ keyForLogic, name, handlePress, inputChar, setInputChar, isMobile }) => {\r\n    const props = {inputChar: inputChar, keyForLogic: keyForLogic}\r\n    const classes = useStyles(props)\r\n\r\n    return (\r\n        <Fragment>\r\n            {isMobile ?\r\n                (<Button\r\n                    className={classes.keypadButton}\r\n                    onTouchStart={() => handlePress(keyForLogic)}\r\n                    onTouchEnd={() => setInputChar(null)}\r\n                    onTouchCancel={() => setInputChar(null)}\r\n                >\r\n                    {name === '<=' ? <BackspaceIcon /> : name}\r\n                </Button>) :\r\n                (<Button\r\n                    className={classes.keypadButton}\r\n                    onMouseDown={() => handlePress(keyForLogic)}\r\n                    onMouseUp={() => setInputChar(null)}\r\n                    onMouseLeave={() => setInputChar(null)}\r\n                >\r\n                    {name === '<=' ? <BackspaceIcon /> : name}\r\n                </Button>)\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default KeypadButton\r\n","import React from 'react'\r\nimport KeypadButton from './KeypadButton'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    keypad: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '60vh'\r\n    },\r\n    row: {\r\n        display: 'flex',\r\n        flexGrow: '1'\r\n    }\r\n})\r\n\r\nconst Keypad = ({ handlePress, inputChar, setInputChar, isMobile, onKeyDown, onKeyUp }) => {\r\n    const classes = useStyles()\r\n\r\n    const createRowOfKeypadButtons = (keysAndNamesArray) => {\r\n        const result = keysAndNamesArray.map((item, index) => {\r\n            return (\r\n                <KeypadButton\r\n                    key={index}\r\n                    isMobile={isMobile}\r\n                    keyForLogic={Array.isArray(item) ? item[0] : item}\r\n                    name={Array.isArray(item) ? item[1] : item}\r\n                    handlePress={handlePress}\r\n                    inputChar={inputChar}\r\n                    setInputChar={setInputChar} />\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className={classes.row}>\r\n                {result}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const row1 = createRowOfKeypadButtons(['(', ')', ['Delete', 'C'], ['Backspace', '<=']])\r\n    const row2 = createRowOfKeypadButtons(['7', '8', '9', '+'])\r\n    const row3 = createRowOfKeypadButtons(['4', '5', '6', '-'])\r\n    const row4 = createRowOfKeypadButtons(['1', '2', '3', '*'])\r\n    const row5 = createRowOfKeypadButtons(['+/-', '0', '.', '/'])\r\n    const row6 = createRowOfKeypadButtons(['='])\r\n\r\n\r\n    return (\r\n        <div\r\n            onKeyDown={onKeyDown}\r\n            onKeyUp={onKeyUp}\r\n            className={classes.keypad}\r\n        >\r\n            {row1}\r\n            {row2}\r\n            {row3}\r\n            {row4}\r\n            {row5}\r\n            {row6}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Keypad\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst useStyles = makeStyles({\r\n    textFieldInputPropsStyle: {\r\n        height: '10vh',\r\n        textAlign: 'right',\r\n        fontSize: '25px',\r\n        caretColor: 'transparent',\r\n    }\r\n})\r\n\r\nconst Display = ({ input, onKeyDown, onKeyUp }) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <TextField\r\n            onKeyDown={onKeyDown}\r\n            onKeyUp={onKeyUp}\r\n            readOnly\r\n            variant='outlined'\r\n            fullWidth\r\n            inputProps={{ className: classes.textFieldInputPropsStyle, readOnly: true }}\r\n            className={classes.display}\r\n            value={input} />\r\n    )\r\n}\r\n\r\nexport default Display","import React, { useState, useRef } from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  main: {\r\n    backgroundColor: 'blue',\r\n    color: 'white',\r\n    outline: '1px solid white',\r\n    height: '5vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontSize: '25px'\r\n  },\r\n  drawer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '25px',\r\n    minHeight: '100px',\r\n    maxHeight: '60vh',\r\n    alignSelf: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  historyItem: {\r\n    marginBottom: '10px'\r\n  },\r\n  openHistoryButton: {\r\n    lineHeight: '100%'\r\n  },\r\n  closeHistoryButton: {\r\n    width: '250px',\r\n    marginBottom: '15px'\r\n  }\r\n})\r\n\r\nconst CalculationHistory = ({ history, handlePasteFromHistory }) => {\r\n  const classes = useStyles()\r\n\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const mappedHistory = history.map((item) => {\r\n    const isPasteAllowed = Number.isFinite(+item[1]) && !Number.isNaN(item[1])\r\n    const doPaste = () => {\r\n      handlePasteFromHistory(item[1])\r\n      setOpen(false)\r\n    }\r\n\r\n    return (\r\n      <ListItem\r\n        key={`${item[0]}${item[1]}`}\r\n        component={Paper}\r\n        elevation={6}\r\n        className={classes.historyItem}>\r\n        <List>\r\n          <ListItem>Expression: {item[0]}</ListItem>\r\n          <ListItem>Result: {item[1]}</ListItem>\r\n          <ListItem>\r\n            {isPasteAllowed &&\r\n              (<Button\r\n                variant='outlined'\r\n                color='primary'\r\n                onClick={doPaste}\r\n              >\r\n                Paste\r\n              </Button>)}\r\n          </ListItem>\r\n        </List>\r\n      </ListItem>\r\n    )\r\n  })\r\n\r\n  const openHistoryButtonRef = useRef()\r\n\r\n  return (\r\n    <div className={classes.main} >\r\n      <Drawer\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        anchor='bottom'\r\n      >\r\n        <div className={classes.drawer}>\r\n          {mappedHistory.length ?\r\n            <List>\r\n              {mappedHistory}\r\n            </List> :\r\n            (<Typography variant='h2'>No calculations were done yet</Typography>)}\r\n          <Button\r\n            variant='contained'\r\n            color='secondary'\r\n            className={classes.closeHistoryButton}\r\n            onClick={() => setOpen(false)}\r\n          >\r\n            Close history\r\n             </Button>\r\n        </div>\r\n      </Drawer>\r\n      <Button\r\n        className={classes.openHistoryButton}\r\n        ref={openHistoryButtonRef}\r\n        onFocus={() => openHistoryButtonRef.current.blur()}\r\n        variant='contained'\r\n        color='secondary'\r\n        onClick={() => setOpen(true)}\r\n      >\r\n        Open history\r\n         </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalculationHistory\r\n","import React, { useState, useEffect, Fragment } from 'react'\nimport useInputLogic from './useInputLogic'\nimport Keypad from './Keypad'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Display from './Display'\nimport CalculationHistory from './CalculationHistory'\nimport { useTheme, useMediaQuery, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles({\n  container: {\n    margin: '10vh auto',\n    padding: '0 5vw',\n    minWidth: '50vw',\n    maxWidth: '1200px',\n  }\n})\n\nconst App = () => {\n  const classes = useStyles()\n\n  const [inputChar, setInputChar] = useState(null)\n\n  const [input, handlePress, history, handlePasteFromHistory] = useInputLogic(setInputChar)\n\n  const [isMobile, setIsMobile] = useState(false)\n\n  const theme = useTheme()\n  const mathches = useMediaQuery(theme.breakpoints.down('sm'))\n\n  useEffect(() => {\n    setIsMobile(mathches)\n  }, [mathches])\n\n  const handleKeyDown = (e) => {\n    handlePress(e.key)\n  }\n\n  const handleKeyUp = (e) => {\n    let key = e.key\n\n    if (key === 'Enter') key = '='\n    if (key === ',') key = '.'\n\n    if (inputChar === key) {\n      setInputChar(null)\n    }\n  }\n\n  return (\n    <Fragment>\n      <CssBaseline />\n      <div className={classes.container}>\n        <Display\n          onKeyDown={handleKeyDown}\n          onKeyUp={handleKeyUp}\n          input={input} />\n        <CalculationHistory\n          history={history}\n          handlePasteFromHistory={handlePasteFromHistory} />\n        <Keypad\n          onKeyDown={handleKeyDown}\n          onKeyUp={handleKeyUp}\n          handlePress={handlePress}\n          inputChar={inputChar}\n          setInputChar={setInputChar}\n          isMobile={isMobile} />\n      </div>\n    </Fragment>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}